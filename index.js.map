{"version":3,"file":"index.js","sources":["../src/js/models/base-api-response.js","../src/js/models/filter-models.js","../src/js/models/exercise-models.js","../src/js/models/quote-model.js","../src/js/your-energy-api.js","../src/js/quote.js","../src/js/components/scroll-up-button.js","../src/js/components/loader.js","../src/img/svg/sprite.svg","../src/js/helpers.js","../src/js/exercises.js","../src/js/main.js","../src/js/utils/errorHandler.js","../src/js/subscription.js"],"sourcesContent":["/**\n * BaseApiResponse class\n * This class is used to represent the base structure of an API response.\n * It contains properties for pagination and results.\n *\n * @class\n * @param {Object} response - The API response object.\n * @param {Array} response.results - The array of results.\n * @param {number} response.page - The current page number.\n * @param {number} response.perPage - The number of items per page.\n * @param {number} response.totalPages - The total number of pages.\n * @property {Array} results - The array of results.\n * @property {number} page - The current page number.\n * @property {number} perPage - The number of items per page.\n * @property {number} totalPages - The total number of pages.\n */\nclass BaseApiResponse {\n  constructor(response){\n    this.page = response.page;\n    this.perPage = response.perPage;\n    this.totalPages = response.totalPages;\n    this.results = response.results;\n  }\n}\n\nexport default BaseApiResponse;","import BaseApiResponse from './base-api-response.js';\n\n/**\n * Class representing a filter model.\n * @class\n * @param {string} filter - The filter type.\n * @param {string} name - The name of the filter.\n * @param {string} imgURL - The URL of the filter image.\n * @property {string} filter - The filter type.\n * @property {string} name - The name of the filter.\n * @property {string} imgURL - The URL of the filter image.\n */\nclass FilterModel {\n  constructor(filter, name, imgURL) {\n    this.filter = filter;\n    this.name = name;\n    this.imgURL = imgURL;\n  }\n}\n\n/**\n * Class representing a filter request.\n * @class\n * @param {string} filter - The filter type.\n * @param {number} page - The current page number.\n * @param {number} limit - The number of items per page.\n * @property {string} filter - The filter type.\n * @property {number} page - The current page number.\n * @property {number} limit - The number of items per page.\n */\nclass FilterRequest {\n    constructor(filter, page, limit) {\n        this.filter = filter;\n        this.page = page;\n        this.limit = limit;\n    }\n}\n\n/**\n * Class representing a filter response.\n * @class\n * @param {Object} response - The API response object.\n * @param {Array} response.data.results - The array of filter results.\n * @param {number} response.data.page - The current page number.\n * @param {number} response.data.perPage - The number of items per page.\n * @param {number} response.data.totalPages - The total number of pages.\n * @property {Array} filters - The array of FilterModel instances.\n * @property {number} page - The current page number.\n * @property {number} perPage - The number of items per page.\n * @property {number} totalPages - The total number of pages.\n */\nclass FilterResponse extends BaseApiResponse{\n    constructor(response) {\n        super(response);\n    }\n\n    /**\n     * Get the array of FilterModel instances.\n     * @returns {Array} The array of FilterModel instances.\n     */\n    getFilters() {\n      return this.results.map(filter => new FilterModel(filter.filter, filter.name, filter.imgURL));\n    }\n}\n\nexport { FilterModel, FilterRequest, FilterResponse };","import BaseApiResponse from './base-api-response.js';\n\n/**\n * Class representing an exercise filter.\n * @class\n * @param {string} bodypart - The body part to filter exercises by.\n * @param {string} muscles - The muscles to filter exercises by.\n * @param {string} equipment - The equipment to filter exercises by.\n * @param {string} keyword - The keyword to search exercises by.\n * @param {number} [page=1] - The current page number.\n * @param {number} [limit=10] - The number of items per page.\n * @property {string} bodypart - The body part to filter exercises by.\n * @property {string} muscles - The muscles to filter exercises by.\n * @property {string} equipment - The equipment to filter exercises by.\n * @property {string} keyword - The keyword to search exercises by.\n * @property {number} page - The current page number.\n * @property {number} limit - The number of items per page.\n */\nclass ExerciseFilter {\n  constructor(bodypart, muscles, equipment, keyword, page = 1, limit = 10) {\n    this.bodypart = bodypart;\n    this.muscles = muscles;\n    this.equipment = equipment;\n    this.keyword = keyword;\n    this.page = page;\n    this.limit = limit;\n  }\n}\n\n/**\n * Class representing an exercise model.\n * @class\n * @param {Object} result - The exercise data object.\n * @param {string} result._id - The unique ID of the exercise.\n * @param {string} result.bodyPart - The body part targeted by the exercise.\n * @param {string} result.equipment - The equipment used for the exercise.\n * @param {string} result.gifUrl - The URL of the exercise GIF.\n * @param {string} result.name - The name of the exercise.\n * @param {string} result.target - The target muscle group.\n * @param {string} result.description - The description of the exercise.\n * @param {number} result.rating - The rating of the exercise.\n * @param {number} result.burnedCalories - The calories burned by the exercise.\n * @param {number} result.time - The time required for the exercise.\n * @param {number} result.popularity - The popularity score of the exercise.\n * @property {string} id - The unique ID of the exercise.\n * @property {string} bodyPart - The body part targeted by the exercise.\n * @property {string} equipment - The equipment used for the exercise.\n * @property {string} gifUrl - The URL of the exercise GIF.\n * @property {string} name - The name of the exercise.\n * @property {string} target - The target muscle group.\n * @property {string} description - The description of the exercise.\n * @property {number} rating - The rating of the exercise.\n * @property {number} burnedCalories - The calories burned by the exercise.\n * @property {number} time - The time required for the exercise.\n * @property {number} popularity - The popularity score of the exercise.\n */\nclass ExerciseModel {\n  constructor(result) {\n    this.id = result._id;\n    this.bodyPart = result.bodyPart;\n    this.equipment = result.equipment;\n    this.gifUrl = result.gifUrl;\n    this.name = result.name;\n    this.target = result.target;\n    this.description = result.description;\n    this.rating = result.rating;\n    this.burnedCalories = result.burnedCalories;\n    this.time = result.time;\n    this.popularity = result.popularity;\n  }\n}\n\n/**\n * Class representing an exercise response.\n * @class\n * @extends BaseApiResponse\n * @param {Object} response - The API response object.\n * @param {Array} response.data.results - The array of exercise results.\n * @param {number} response.data.page - The current page number.\n * @param {number} response.data.perPage - The number of items per page.\n * @param {number} response.data.totalPages - The total number of pages.\n * @property {Array} results - The array of exercise results.\n * @property {number} page - The current page number.\n * @property {number} perPage - The number of items per page.\n * @property {number} totalPages - The total number of pages.\n */\nclass ExerciseResponse extends BaseApiResponse {\n  constructor(response) {\n    super(response);\n  }\n\n  /**\n   * Get the array of ExerciseModel instances.\n   * @returns {Array<ExerciseModel>} The array of ExerciseModel instances.\n   */\n  getExercises() {\n    return this.results.map(exercise => new ExerciseModel(exercise));\n  }\n}\n\n/**\n * Class representing an exercise rating patch request.\n * @class\n * @param {number} rate - The rating for the exercise.\n * @param {string} email - The email of the user.\n * @param {string} review - The review text for the exercise.\n * @property {number} rate - The rating for the exercise.\n * @property {string} email - The email of the user.\n * @property {string} review - The review text for the exercise.\n */\nclass ExerciseRatingPatchRequest {\n  constructor(rate, email, review) {\n    this.rate = rate;\n    this.email = email;\n    this.review = review;\n  }\n}\n\nexport { ExerciseFilter, ExerciseModel, ExerciseResponse, ExerciseRatingPatchRequest };","/**\n * QuoteModel\n * Represents a quote model.\n *\n * @class\n * @param {Object} response - The API response object.\n * @param {string} response.quote - The quote text.\n * @param {string} response.author - The author of the quote.\n * @property {string} quote - The quote text.\n * @property {string} author - The author of the quote.\n */\nclass QuoteModel {\n  constructor(response) {\n    this.quote = response.quote;\n    this.author = response.author;\n  }\n}\n\nexport default QuoteModel;","import axios from 'axios';\nimport { FilterRequest, FilterResponse } from './models/filter-models.js';\nimport { ExerciseFilter, ExerciseModel, ExerciseResponse } from './models/exercise-models.js';\nimport QuoteModel from './models/quote-model.js';\n\nconst API_URL = 'https://your-energy.b.goit.study/api';\n\n/**\n * YourEnergyAPI class\n * This class is used to interact with the Your Energy API.\n */\nclass YourEnergyAPI {\n  constructor() {\n    this._api = axios.create({\n      baseURL: API_URL,\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    });\n  }\n\n  /**\n   * Fetches filters from the API.\n   * @param {FilterRequest} filterRequest\n   * @returns {Promise<FilterResponse>}\n   */\n  async fetchFilters(filterRequest) {\n    try {\n      const response = await this._api.get('/filters', {\n        params: filterRequest,\n      });\n      return new FilterResponse(response.data);\n    } catch (error) {\n      console.error('Error fetching filters:', error);\n      throw error;\n    }\n  }\n\n  /**\n   * Fetches exercises by filter from the API.\n   * @param {ExerciseFilter} exerciseFilter\n   * @returns {Promise<ExerciseResponse>}\n   */\n  async fetchExercisesByFilter(exerciseFilter) {\n    try {\n      const response = await this._api.get('/exercises', {\n        params: exerciseFilter,\n      });\n      return new ExerciseResponse(response.data);\n    } catch (error) {\n      console.error('Error fetching exercises by filter:', error);\n      throw error;\n    }\n  }\n\n  /**\n   * Fetches exercises by ID from the API.\n   * @param {string} id\n   * @returns {Promise<ExerciseModel>}\n   */\n  async fetchExercisesById(id) {\n    try {\n      const response = await this._api.get(`/exercises/${id}`);\n      return new ExerciseModel(response.data);\n    } catch (error) {\n      console.error('Error fetching exercises by ID:', error);\n      throw error;\n    }\n  }\n\n  /**\n   * Updates exercise rating by ID.\n   * @param {string} id\n   * @param {ExerciseRatingPatchRequest} request\n   * @returns {Promise<ExerciseModel>}\n   */\n  async patchExerciseRating(id, request) {\n    try {\n      const response = await this._api.patch(`/exercises/${id}/rating`, request);\n      return new ExerciseModel(response.data);\n    } catch (error) {\n      console.error('Error updating exercise rating:', error);\n      throw error;\n    }\n  }\n\n  /**\n   * Fetches the quote of the day from the API.\n   * @returns {Promise<QuoteModel>}\n   */\n  async fetchQuoteOfTheDay() {\n    try {\n      const response = await this._api.get('/quote');\n      return new QuoteModel(response.data);\n    } catch (error) {\n      console.error('Error fetching quote of the day:', error);\n      throw error;\n    }\n  }\n\n  /**\n   * Posts a subscription to the API.\n   * @param email\n   * @returns {Promise<string>} success message\n   */\n  async postSubscription(email) {\n    try {\n      const response = await this._api.post('/subscription', { email });\n      return response.data.message;\n    } catch (error) {\n      console.error('Error posting subscription:', error);\n      throw error;\n    }\n  }\n}\n\nconst yourEnergyAPI = new YourEnergyAPI();\nexport default yourEnergyAPI;","import yourEnergyAPI from './your-energy-api.js';\n\n(() => {\n  const ROLE = 'quote-of-the-day-container';\n  const storageKey = 'quoteOfTheDay';\n\n  class Quote {\n    #date;\n    /**\n     * @param {Date} date\n     */\n    set date(date) {\n      this.#date = this.#formatDate(date);\n    }\n\n    get date() {\n      return this.#date;\n    }\n\n    /**\n     * @param {String} text\n     * @param {String} author\n     * @param {Date} date\n     */\n    constructor({ text, author, date = null }) {\n      this.text = text;\n      this.author = author;\n      this.date = date || new Date();\n    }\n\n    isFresh() {\n      return this.#date === this.#formatDate(new Date());\n    }\n\n    #formatDate(date) {\n      return date.toISOString().split('T')[0];\n    }\n\n    toJSON() {\n      return {\n        text: this.text,\n        author: this.author,\n        date: this.#date,\n      };\n    }\n  }\n\n  class QuoteProvider {\n    static #load() {\n      const quoteData = JSON.parse(localStorage.getItem(storageKey));\n      if(quoteData) {\n        quoteData.date = new Date(quoteData?.date);\n      }\n      return quoteData ? new Quote(quoteData) : null;\n    }\n\n    static #save(quote) {\n      localStorage.setItem(storageKey, JSON.stringify(quote));\n    }\n\n    static async getQuote() {\n      const storedQuote = this.#load();\n      if (storedQuote?.isFresh()) {\n        return storedQuote;\n      }\n\n      const quote = await yourEnergyAPI.fetchQuoteOfTheDay();\n      const newQuote = new Quote({\n        text: quote.quote,\n        author: quote.author,\n      });\n      this.#save(newQuote);\n\n      return newQuote;\n    }\n  }\n\n  async function renderQuote() {\n    const quoteContainer = document.querySelector(`[data-role=\"${ROLE}\"]`);\n    if (quoteContainer === null) {\n      throw new Error(`Failed to render quote: element with data-role \"${ROLE}\" not found.`);\n    }\n    try {\n      const quote = await QuoteProvider.getQuote();\n      quoteContainer.innerHTML = `\n        <p class=\"quote-text\">${quote.text}</p>\n        <p class=\"quote-author\">${quote.author}</p>\n      `;\n    } catch (e) {\n      console.error('Error fetching quote:', e);\n    }\n  }\n\n  document.addEventListener('DOMContentLoaded', renderQuote);\n})();\n","import '../../css/scroll-up.css';\n\nexport function createScrollUpButton() {\n  const button = document.createElement('button');\n  button.id = 'scrollUpBtn';\n  button.title = 'Up';\n  button.innerHTML = `\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"32\" height=\"32\" viewBox=\"0 0 24 24\" fill=\"none\">\n      <path d=\"M12 4L12 20\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/>\n      <path d=\"M5 11L12 4L19 11\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/>\n    </svg>\n  `;\n\n  document.body.appendChild(button);\n\n  window.addEventListener('scroll', () => {\n    if (window.scrollY > 300) {\n      button.classList.add('show');\n    } else {\n      button.classList.remove('show');\n    }\n  });\n\n  button.addEventListener('click', () => {\n    window.scrollTo({\n      top: 0,\n      behavior: 'smooth',\n    });\n  });\n}\n","import '../../css/loader.css';\n\nexport class Loader {\n  constructor() {\n    this.backdrop = document.createElement('div');\n    this.backdrop.className = 'loader-backdrop';\n    this.backdrop.innerHTML = `<div class=\"loader\"></div>`;\n  }\n\n  show() {\n    if (!document.body.contains(this.backdrop)) {\n      document.body.appendChild(this.backdrop);\n    }\n  }\n\n  hide() {\n    if (document.body.contains(this.backdrop)) {\n      document.body.removeChild(this.backdrop);\n    }\n  }\n}\n","export default \"__VITE_ASSET__DO1$9C8$__\"","function capitalizeFirstLetter(string) {\n    return string.charAt(0).toUpperCase() + string.slice(1);\n}\n\nexport { capitalizeFirstLetter };","import icons from '../img/svg/sprite.svg';\nimport yourEnergyAPI from './your-energy-api.js';\nimport { FilterRequest } from './models/filter-models.js';\nimport { capitalizeFirstLetter } from './helpers.js';\nimport { ExerciseFilter } from './models/exercise-models.js';\n\nclass ExerciseFilterElement {\n  constructor() {\n    this._element = document.createElement('li');\n    this._element.classList.add('exercises-filters__item');\n    this._image = document.createElement('img');\n    this._image.classList.add('exercises-filters__image');\n    this._image.setAttribute('loading', 'lazy');\n    this._overlay = document.createElement('div');\n    this._overlay.classList.add('exercises-filters__overlay');\n    this._overlayTitle = document.createElement('h5');\n    this._overlayText = document.createElement('p');\n    this._overlayText.classList.add('exercises-filters__overlay-text');\n  }\n\n  setImage(src) {\n    this._image.src = src;\n  }\n\n  setTitle(title) {\n    this._overlayTitle.textContent = capitalizeFirstLetter(title);\n  }\n\n  setText(text) {\n    this._overlayText.textContent = capitalizeFirstLetter(text);\n  }\n\n  setFilterName(name, filter) {\n    this._element.dataset.name = name;\n    this._element.dataset.filter = filter;\n  }\n\n  setImageAlt(alt) {\n    this._image.alt = alt;\n  }\n\n  build() {\n    this._overlay.append(this._overlayTitle, this._overlayText);\n    this._element.append(this._image, this._overlay);\n    return this._element;\n  }\n}\n\nclass ExerciseElement {\n  constructor() {\n    this._element = document.createElement('li');\n    this._element.classList.add('exercises-list__item');\n\n    this._header = document.createElement('div');\n    this._header.classList.add('exercise-header');\n\n\n    this._nameBlock = document.createElement('h3');\n    this._nameBlock.classList.add('exercise-name');\n\n    this._infoBlock = document.createElement('div');\n    this._infoBlock.classList.add('exercise-info');\n  }\n\n  addHeader(rating) {\n    const leftBlock = document.createElement('div');\n    leftBlock.classList.add('exercise-header__left');\n    const workoutName = document.createElement('p');\n    workoutName.classList.add('exercise-workout');\n    workoutName.textContent = 'WORKOUT';\n    leftBlock.append(workoutName);\n    const ratingElement = document.createElement('p');\n    ratingElement.classList.add('exercise-rating');\n    ratingElement.textContent = `${rating}`;\n    const span = document.createElement('span');\n    span.append(this._createSvg('star', 'exercise-rating__icon', 24, 24));\n    ratingElement.append(span);\n    leftBlock.append(ratingElement);\n\n    const startButton = document.createElement('button');\n    startButton.classList.add('exercise-header__start-button');\n    startButton.textContent = 'Start';\n    startButton.append(this._createSvg('exercise-start', 'exercise-arrow', 13, 13));\n    this._header.append(leftBlock, startButton);\n  }\n\n  addName(workoutName) {\n    this._nameBlock.append(this._createSvg('runner', 'exercise-name-icon', 13, 13));\n    this._nameBlock.append(workoutName);\n  }\n\n  addInfo(calories, bodyPart, target) {\n    this._infoBlock.append(this._createInfoTextElement('Burned calories: ', calories));\n    this._infoBlock.append(this._createInfoTextElement('Body part: ', bodyPart));\n    this._infoBlock.append(this._createInfoTextElement('Target: ', target));\n  }\n\n  build() {\n    this._element.append(this._header, this._nameBlock, this._infoBlock);\n    return this._element;\n  }\n\n  setId(_id) {\n    this._element.dataset.id = _id;\n  }\n\n  _createInfoTextElement(title, text, className = 'truncate-text') {\n    const element = document.createElement('p');\n    element.classList.add(className);\n    const titleElement = document.createElement('strong');\n    titleElement.classList.add('exercise-info__title');\n    titleElement.textContent = title;\n    element.append(titleElement);\n    element.append(document.createTextNode(text));\n    return element;\n  }\n\n  _createSvg(iconName, cssClass) {\n    const svgElement = document.createElement('svg');\n    svgElement.classList.add(cssClass);\n    const useElement = document.createElement('use');\n    useElement.setAttribute('href', `${icons}#${iconName}`);\n    svgElement.appendChild(useElement);\n    return svgElement;\n  }\n}\n\nclass ExercisesFilterRenderer {\n  constructor() {\n    this._exercisesFilterParent = document.getElementById('exercises-filters');\n    this._exercisesParent = document.getElementById('exercises-list');\n    if (!this._exercisesFilterParent) {\n      throw new Error('Exercises filter parent element not found');\n    }\n    this._paginationElement = document.querySelector('.exercises-pagination>ul');\n    this._breadcrumbs = document.querySelector('.breadcrumbs');\n    this._searchContainer = document.getElementById('search-container');\n    this._searchInput = this._searchContainer.querySelector('.search-input');\n\n    this._page = 1;\n    this._limit = 12;\n    this._pages = 1;\n    this._elements = [];\n    this._isCategory = false;\n  }\n\n  async init() {\n    this._setPageLimit();\n    await this._fetchFilters();\n    this._renderFilters();\n    this._addEventListeners();\n  }\n\n  _setPageLimit() {\n    this._page = 1;\n    // if mobile\n    if (window.innerWidth <= 768) {\n      this._limit = 9;\n    } else {\n      this._limit = 12;\n    }\n  }\n\n  async _fetchFilters() {\n    const filterButton = this._exercisesFilterParent.querySelector('.exercises-filters__selected');\n    if (!filterButton) {\n      throw new Error('Filter button not found');\n    }\n    const filterName = filterButton.dataset.name;\n    const filterRequest = new FilterRequest(filterName, this._page, this._limit);\n    try {\n      const response = await yourEnergyAPI.fetchFilters(filterRequest);\n      const items = response.getFilters();\n      this._pages = response.totalPages;\n      if (items.length > 0) {\n        this._elements = items.map((item) => {\n          const filterElement = new ExerciseFilterElement();\n          filterElement.setImage(item.imgURL);\n          filterElement.setTitle(item.name);\n          filterElement.setText(item.filter);\n          filterElement.setFilterName(item.name, item.filter);\n          filterElement.setImageAlt(item.name);\n          return filterElement.build();\n        });\n      }\n      this._pages = response.totalPages;\n    } catch (error) {\n      console.error('Error fetching filters:', error);\n    }\n  }\n\n  _renderFilters() {\n    this._exercisesParent.replaceChildren(...this._elements);\n    this._renderPagination();\n    this._addBreadcrumbs();\n    this._isCategory = true;\n    localStorage.removeItem('exerciseFilter');\n    this._searchContainer.classList.add('hidden');\n  }\n\n  async _onCardClick(event) {\n    event.preventDefault();\n    const target = event.target.closest('.exercises-filters__item');\n    if (target) {\n      this._searchContainer.classList.remove('hidden');\n      this._addBreadcrumbs(target.dataset.name);\n      const filterName = target.dataset.name;\n      const filter = target.dataset.filter;\n      const request = this._buildRequest(filterName, filter);\n      localStorage.setItem('exerciseFilter', JSON.stringify(request));\n      await this._loadAndRenderExercises(request);\n    }\n  }\n\n  async _loadAndRenderExercises(request) {\n    const response = await yourEnergyAPI.fetchExercisesByFilter(request);\n    this._renderExercises(response);\n    this._renderPagination();\n    this._isCategory = false;\n  }\n\n  _addBreadcrumbs(breadcrumb = null) {\n    if (this._breadcrumbs.children.length > 1 || !breadcrumb && this._breadcrumbs.children.length > 1) {\n      this._breadcrumbs.children[1].remove();\n    }\n\n    if (!breadcrumb) {\n      return;\n    }\n\n    const breadcrumbElement = document.createElement('li');\n    breadcrumbElement.classList.add('breadcrumbs__item');\n    const item = document.createElement('span');\n    item.textContent = '/';\n    breadcrumbElement.append(item);\n    breadcrumbElement.append(capitalizeFirstLetter(breadcrumb));\n    this._breadcrumbs.append(breadcrumbElement);\n  }\n\n  _renderPagination() {\n    const items = [];\n    const dots = document.createElement('li');\n    dots.classList.add('exercises-pagination__dots');\n    dots.textContent = '...';\n    const renderItem = (cssClass, page, svgClass, svgIcon) => {\n      const item = document.createElement('li');\n      item.classList.add('exercises-pagination__item');\n      item.classList.add(cssClass);\n      item.classList.add('exercises-pagination__arrow');\n      item.dataset.page = page;\n      if (this._page === page) {\n        item.classList.add('disabled');\n      }\n      const svgElement = document.createElement('svg');\n      svgElement.classList.add(svgClass);\n      const useElement = document.createElement('use');\n      useElement.setAttribute('href', `${icons}#${svgIcon}`);\n      svgElement.appendChild(useElement);\n      item.append(svgElement);\n      return item;\n    };\n    const renderPreviousButtons = () => {\n      const firstButton = renderItem(\n        'exercises-pagination__beginning',\n        1,\n        'exercises-pagination__beginning__arrow',\n        'pagination-left-double-arrow');\n      const previousButton = renderItem(\n        'exercises-pagination__previous',\n        this._page === 1 ? 1 : this._page - 1,\n        'exercises-pagination__arrow',\n        'pagination-left-single-arrow');\n      items.push(firstButton);\n      items.push(previousButton);\n      if (this._page >= 3) {\n        items.push(dots);\n      }\n    };\n\n    const renderNextButtons = () => {\n      const lastButton = renderItem(\n        'exercises-pagination__last',\n        this._pages,\n        'exercises-pagination__arrow',\n        'pagination-right-double-arrow');\n      const nextButton = renderItem(\n        'exercises-pagination__next',\n        this._page === this._pages ? this._pages : this._page + 1,\n        'exercises-pagination__arrow',\n        'pagination-right-single-arrow');\n\n      if (this._page <= this._pages - 2) {\n        items.push(dots);\n      }\n\n      items.push(nextButton);\n      items.push(lastButton);\n    };\n    const renderPaginationItem = (itemsCount, initialPage = 1) => {\n      const list = [];\n      for (let i = initialPage; i <= itemsCount; i++) {\n        const item = document.createElement('li');\n        item.classList.add('exercises-pagination__item');\n        item.classList.add('exercises-pagination__number');\n        if (i === this._page) {\n          item.classList.add('exercises-pagination__current');\n        }\n        item.textContent = i;\n        item.dataset.page = i;\n        list.push(item);\n      }\n\n      return list;\n    };\n\n    if (this._pages <= 3) {\n      items.push(...renderPaginationItem(this._pages));\n    }\n\n    if (this._pages > 3) {\n      renderPreviousButtons();\n      const initialPage = this._page === 1 ? 1 : this._page === this._pages ? this._page - 2 : this._page - 1;\n      const itemsCount = initialPage + 2;\n      items.push(...renderPaginationItem(itemsCount, initialPage));\n      renderNextButtons();\n    }\n\n    this._paginationElement.innerHTML = '';\n    for (const item of items) {\n      this._paginationElement.innerHTML += item.outerHTML;\n    }\n  }\n\n  async _onPageClick(event) {\n    event.preventDefault();\n    const target = event.target.closest('.exercises-pagination__item');\n    if (!target || target.classList.contains('disabled')) {\n      return;\n    }\n\n    const page = parseInt(target.dataset.page);\n    if (!isNaN(page)) {\n      this._page = page;\n    }\n\n    if (this._isCategory) {\n      await this._fetchFilters();\n      this._renderFilters();\n      return;\n    }\n\n    const request = JSON.parse(localStorage.getItem('exerciseFilter'));\n    request.page = this._page;\n    localStorage.setItem('exerciseFilter', JSON.stringify(request));\n    await this._loadAndRenderExercises(request);\n  }\n\n  _renderExercises(data) {\n    this._exercisesParent.innerHTML = '';\n\n    if (!data || !data.results || data.results.length === 0) {\n      this._exercisesParent.innerHTML = '<p>No exercises found.</p>';\n      return;\n    }\n\n    this._pages = data.totalPages;\n    const exercises = data.getExercises();\n\n    this._elements = exercises.map((exercise) => {\n      const exerciseElement = new ExerciseElement();\n      exerciseElement.setId(exercise.id);\n      exerciseElement.addHeader(exercise.rating);\n      exerciseElement.addName(exercise.name);\n      exerciseElement.addInfo(exercise.burnedCalories, exercise.bodyPart, exercise.target);\n      return exerciseElement.build();\n    });\n\n    for (const element of this._elements) {\n      this._exercisesParent.innerHTML += element.outerHTML;\n    }\n  }\n\n  async _onFilterClick(event) {\n    event.preventDefault();\n    this._setPageLimit();\n    // remove active class from all filters\n    const filters = this._exercisesFilterParent.querySelectorAll('.exercises-filters__selected');\n    filters.forEach((filter) => {\n      filter.classList.remove('exercises-filters__selected');\n    });\n    // add active class to the clicked filter\n    event.target.classList.add('exercises-filters__selected');\n    await this._fetchFilters();\n    this._renderFilters();\n  }\n\n  _addEventListeners() {\n    this._exercisesFilterParent.removeEventListener('click', this._onFilterClick.bind(this));\n    this._exercisesFilterParent.addEventListener('click', this._onFilterClick.bind(this));\n\n    this._exercisesParent.removeEventListener('click', this._onCardClick.bind(this));\n    this._exercisesParent.addEventListener('click', this._onCardClick.bind(this));\n\n    this._paginationElement.addEventListener('click', this._onPageClick.bind(this));\n    this._searchContainer.querySelector('.search-button').addEventListener('click', this._onSearchClick.bind(this));\n    this._searchInput.addEventListener('keyup', this._onSearchKeyUp.bind(this));\n  }\n\n  async _onSearchClick(event) {\n    event.preventDefault();\n    const searchValue = this._searchInput.value.trim();\n    if (searchValue) {\n      const request = JSON.parse(localStorage.getItem('exerciseFilter'));\n      request.keyword = searchValue;\n      localStorage.setItem('exerciseFilter', JSON.stringify(request));\n      this._searchInput.value = '';\n      await this._loadAndRenderExercises(request);\n    }\n  }\n\n  async _onSearchKeyUp(event) {\n    event.preventDefault();\n    const searchValue = this._searchInput.value.trim();\n    if (event.key === 'Enter' && searchValue) {\n      await this._onSearchClick(event);\n    }\n  }\n\n  _buildRequest(filterName, filter) {\n    if (filter.toLowerCase() === 'muscles') {\n      return new ExerciseFilter(null, filterName, null, null, this._page, this._limit);\n    } else if (filter.toLowerCase() === 'equipment') {\n      return new ExerciseFilter(null, null, filterName, null, this._page, this._limit);\n    } else if (filter.toLowerCase() === 'body parts') {\n      return new ExerciseFilter(filterName, null, null, null, this._page, this._limit);\n    }\n  }\n}\n\nconst page = new ExercisesFilterRenderer();\nexport { page as ExercisesFilterRenderer };","import yourEnergyAPI from './your-energy-api.js';\nimport { FilterRequest } from './models/filter-models.js';\nimport {\n  ExerciseFilter,\n  ExerciseRatingPatchRequest,\n} from './models/exercise-models.js';\nimport { createScrollUpButton } from './components/scroll-up-button.js';\nimport { Loader } from './components/loader.js';\n\nconst loader = new Loader();\n\n// example Filters\nconst filterRequest = new FilterRequest('Body parts', 1, 5);\nloader.show();\nyourEnergyAPI\n  .fetchFilters(filterRequest)\n  .then(response => {\n    console.log('Response:', response);\n    console.log('Filters:', response.getFilters());\n  })\n  .catch(error => {\n    console.error('Error:', error);\n  })\n  .finally(() => {\n    loader.hide();\n  });\n\n// example Exercises by filter\nconst exerciseFilter = new ExerciseFilter(\n  'back',\n  'lats',\n  'barbell',\n  'pull',\n  1,\n  5\n);\nloader.show();\nyourEnergyAPI\n  .fetchExercisesByFilter(exerciseFilter)\n  .then(response => {\n    console.log('Response:', response);\n    console.log('Exercises:', response.getExercises());\n  })\n  .catch(error => {\n    console.error('Error:', error);\n  })\n  .finally(() => {\n    loader.hide();\n  });\n// example Exercises by ID\nconst exerciseId = '64f389465ae26083f39b1ab2';\nloader.show();\nyourEnergyAPI\n  .fetchExercisesById(exerciseId)\n  .then(response => {\n    console.log('Response:', response);\n  })\n  .catch(error => {\n    console.error('Error:', error);\n  })\n  .finally(() => {\n    loader.hide();\n  });\n\n// example Exercise patch rating\nconst exerciseRatingRequest = new ExerciseRatingPatchRequest(\n  3,\n  `test${Date.now()}@gmail.com`, // it requires email to be uniq\n  'Great exercise! Very effective.'\n);\nloader.show();\nyourEnergyAPI\n  .patchExerciseRating(exerciseId, exerciseRatingRequest)\n  .then(response => {\n    console.log('Response:', response);\n  })\n  .catch(error => {\n    console.error('Error:', error);\n  })\n  .finally(() => {\n    loader.hide();\n  });\n\n// example Quote\nloader.show();\nyourEnergyAPI\n  .fetchQuoteOfTheDay()\n  .then(response => {\n    console.log('Quote of the Day:', response);\n    console.log('Quote:', response.quote);\n    console.log('Author:', response.author);\n  })\n  .catch(error => {\n    console.error('Error fetching quote:', error);\n  })\n  .finally(() => {\n    loader.hide();\n  });\n\n// example Subscription\nconst email = `sub_test${Date.now()}@gmail.com`; // it requires email to be uniq\nloader.show();\nyourEnergyAPI\n  .postSubscription(email)\n  .then(response => {\n    console.log('Subscription Response:', response);\n  })\n  .catch(error => {\n    console.error('Error:', error);\n  })\n  .finally(() => {\n    loader.hide();\n  });\n\n// Scroll Up Button\ndocument.addEventListener('DOMContentLoaded', () => {\n  createScrollUpButton();\n});\n\n\n/// main logic\nimport { ExercisesFilterRenderer } from './exercises.js';\n\n\nExercisesFilterRenderer.init();\n","export const handleApiError = error => {\n  if (error.response) {\n    const messages = {\n      400: 'Bad request: invalid request body.',\n      404: 'Endpoint not found.',\n      409: 'You are already subscribed.',\n      500: 'Server error: please try again later.',\n    };\n    alert(messages[error.response.status] || 'Unknown server error occurred.');\n  } else {\n    alert('Unexpected error. Please check your connection and try again.');\n  }\n\n  console.error('API Error:', error);\n};\n","import yourEnergyAPI from './your-energy-api.js';\nimport { handleApiError } from './utils/errorHandler.js';\n\ndocument.addEventListener('DOMContentLoaded', () => {\n  const form = document.getElementById('subscriptionForm');\n  const emailInput = form?.elements?.email;\n\n  const showAlert = message => alert(message);\n\n  const handleSuccess = message => {\n    showAlert(message);\n    emailInput.value = '';\n  };\n\n  form?.addEventListener('submit', async event => {\n    event.preventDefault();\n\n    if (!emailInput.checkValidity()) {\n      showAlert('Please enter a valid email address.');\n      return;\n    }\n\n    try {\n      const message = await yourEnergyAPI.postSubscription(\n        emailInput.value.trim()\n      );\n      handleSuccess(message);\n    } catch (error) {\n      handleApiError(error);\n    }\n  });\n});\n"],"names":["BaseApiResponse","response","FilterModel","filter","name","imgURL","FilterRequest","page","limit","FilterResponse","ExerciseFilter","bodypart","muscles","equipment","keyword","ExerciseModel","result","ExerciseResponse","exercise","ExerciseRatingPatchRequest","rate","email","review","QuoteModel","API_URL","YourEnergyAPI","axios","filterRequest","error","exerciseFilter","id","request","yourEnergyAPI","ROLE","storageKey","Quote","text","author","date","__privateAdd","_Quote_instances","_date","__privateSet","__privateMethod","formatDate_fn","__privateGet","QuoteProvider","storedQuote","_QuoteProvider_static","load_fn","quote","newQuote","save_fn","quoteData","renderQuote","quoteContainer","e","createScrollUpButton","button","Loader","icons","capitalizeFirstLetter","string","ExerciseFilterElement","src","title","alt","ExerciseElement","rating","leftBlock","workoutName","ratingElement","span","startButton","calories","bodyPart","target","_id","className","element","titleElement","iconName","cssClass","svgElement","useElement","ExercisesFilterRenderer","filterButton","filterName","items","item","filterElement","event","breadcrumb","breadcrumbElement","dots","renderItem","svgClass","svgIcon","renderPreviousButtons","firstButton","previousButton","renderNextButtons","lastButton","nextButton","renderPaginationItem","itemsCount","initialPage","list","i","data","exercises","exerciseElement","searchValue","loader","exerciseId","exerciseRatingRequest","handleApiError","form","emailInput","_a","showAlert","message","handleSuccess"],"mappings":"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"}