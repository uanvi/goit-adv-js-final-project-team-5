{"version":3,"file":"index.js","sources":["../src/js/models/base-api-response.js","../src/js/models/filter-models.js","../src/js/models/exercise-models.js","../src/js/models/quote-model.js","../src/js/your-energy-api.js","../src/js/quote.js","../src/js/helpers.js","../src/js/exercises.js","../src/js/main.js"],"sourcesContent":["/**\n * BaseApiResponse class\n * This class is used to represent the base structure of an API response.\n * It contains properties for pagination and results.\n *\n * @class\n * @param {Object} response - The API response object.\n * @param {Array} response.results - The array of results.\n * @param {number} response.page - The current page number.\n * @param {number} response.perPage - The number of items per page.\n * @param {number} response.totalPages - The total number of pages.\n * @property {Array} results - The array of results.\n * @property {number} page - The current page number.\n * @property {number} perPage - The number of items per page.\n * @property {number} totalPages - The total number of pages.\n */\nclass BaseApiResponse {\n  constructor(response){\n    this.page = response.page;\n    this.perPage = response.perPage;\n    this.totalPages = response.totalPages;\n    this.results = response.results;\n  }\n}\n\nexport default BaseApiResponse;","import BaseApiResponse from './base-api-response.js';\n\n/**\n * Class representing a filter model.\n * @class\n * @param {string} filter - The filter type.\n * @param {string} name - The name of the filter.\n * @param {string} imgURL - The URL of the filter image.\n * @property {string} filter - The filter type.\n * @property {string} name - The name of the filter.\n * @property {string} imgURL - The URL of the filter image.\n */\nclass FilterModel {\n  constructor(filter, name, imgURL) {\n    this.filter = filter;\n    this.name = name;\n    this.imgURL = imgURL;\n  }\n}\n\n/**\n * Class representing a filter request.\n * @class\n * @param {string} filter - The filter type.\n * @param {number} page - The current page number.\n * @param {number} limit - The number of items per page.\n * @property {string} filter - The filter type.\n * @property {number} page - The current page number.\n * @property {number} limit - The number of items per page.\n */\nclass FilterRequest {\n    constructor(filter, page, limit) {\n        this.filter = filter;\n        this.page = page;\n        this.limit = limit;\n    }\n}\n\n/**\n * Class representing a filter response.\n * @class\n * @param {Object} response - The API response object.\n * @param {Array} response.data.results - The array of filter results.\n * @param {number} response.data.page - The current page number.\n * @param {number} response.data.perPage - The number of items per page.\n * @param {number} response.data.totalPages - The total number of pages.\n * @property {Array} filters - The array of FilterModel instances.\n * @property {number} page - The current page number.\n * @property {number} perPage - The number of items per page.\n * @property {number} totalPages - The total number of pages.\n */\nclass FilterResponse extends BaseApiResponse{\n    constructor(response) {\n        super(response);\n    }\n\n    /**\n     * Get the array of FilterModel instances.\n     * @returns {Array} The array of FilterModel instances.\n     */\n    getFilters() {\n      return this.results.map(filter => new FilterModel(filter.filter, filter.name, filter.imgURL));\n    }\n}\n\nexport { FilterModel, FilterRequest, FilterResponse };","import BaseApiResponse from './base-api-response.js';\n\n/**\n * Class representing an exercise filter.\n * @class\n * @param {string} bodypart - The body part to filter exercises by.\n * @param {string} muscles - The muscles to filter exercises by.\n * @param {string} equipment - The equipment to filter exercises by.\n * @param {string} keyword - The keyword to search exercises by.\n * @param {number} [page=1] - The current page number.\n * @param {number} [limit=10] - The number of items per page.\n * @property {string} bodypart - The body part to filter exercises by.\n * @property {string} muscles - The muscles to filter exercises by.\n * @property {string} equipment - The equipment to filter exercises by.\n * @property {string} keyword - The keyword to search exercises by.\n * @property {number} page - The current page number.\n * @property {number} limit - The number of items per page.\n */\nclass ExerciseFilter {\n  constructor(bodypart, muscles, equipment, keyword, page = 1, limit = 10) {\n    this.bodypart = bodypart;\n    this.muscles = muscles;\n    this.equipment = equipment;\n    this.keyword = keyword;\n    this.page = page;\n    this.limit = limit;\n  }\n}\n\n/**\n * Class representing an exercise model.\n * @class\n * @param {Object} result - The exercise data object.\n * @param {string} result._id - The unique ID of the exercise.\n * @param {string} result.bodyPart - The body part targeted by the exercise.\n * @param {string} result.equipment - The equipment used for the exercise.\n * @param {string} result.gifUrl - The URL of the exercise GIF.\n * @param {string} result.name - The name of the exercise.\n * @param {string} result.target - The target muscle group.\n * @param {string} result.description - The description of the exercise.\n * @param {number} result.rating - The rating of the exercise.\n * @param {number} result.burnedCalories - The calories burned by the exercise.\n * @param {number} result.time - The time required for the exercise.\n * @param {number} result.popularity - The popularity score of the exercise.\n * @property {string} id - The unique ID of the exercise.\n * @property {string} bodyPart - The body part targeted by the exercise.\n * @property {string} equipment - The equipment used for the exercise.\n * @property {string} gifUrl - The URL of the exercise GIF.\n * @property {string} name - The name of the exercise.\n * @property {string} target - The target muscle group.\n * @property {string} description - The description of the exercise.\n * @property {number} rating - The rating of the exercise.\n * @property {number} burnedCalories - The calories burned by the exercise.\n * @property {number} time - The time required for the exercise.\n * @property {number} popularity - The popularity score of the exercise.\n */\nclass ExerciseModel {\n  constructor(result) {\n    this.id = result._id;\n    this.bodyPart = result.bodyPart;\n    this.equipment = result.equipment;\n    this.gifUrl = result.gifUrl;\n    this.name = result.name;\n    this.target = result.target;\n    this.description = result.description;\n    this.rating = result.rating;\n    this.burnedCalories = result.burnedCalories;\n    this.time = result.time;\n    this.popularity = result.popularity;\n  }\n}\n\n/**\n * Class representing an exercise response.\n * @class\n * @extends BaseApiResponse\n * @param {Object} response - The API response object.\n * @param {Array} response.data.results - The array of exercise results.\n * @param {number} response.data.page - The current page number.\n * @param {number} response.data.perPage - The number of items per page.\n * @param {number} response.data.totalPages - The total number of pages.\n * @property {Array} results - The array of exercise results.\n * @property {number} page - The current page number.\n * @property {number} perPage - The number of items per page.\n * @property {number} totalPages - The total number of pages.\n */\nclass ExerciseResponse extends BaseApiResponse {\n  constructor(response) {\n    super(response);\n  }\n\n  /**\n   * Get the array of ExerciseModel instances.\n   * @returns {Array<ExerciseModel>} The array of ExerciseModel instances.\n   */\n  getExercises() {\n    return this.results.map(exercise => new ExerciseModel(exercise));\n  }\n}\n\n/**\n * Class representing an exercise rating patch request.\n * @class\n * @param {number} rate - The rating for the exercise.\n * @param {string} email - The email of the user.\n * @param {string} review - The review text for the exercise.\n * @property {number} rate - The rating for the exercise.\n * @property {string} email - The email of the user.\n * @property {string} review - The review text for the exercise.\n */\nclass ExerciseRatingPatchRequest {\n  constructor(rate, email, review) {\n    this.rate = rate;\n    this.email = email;\n    this.review = review;\n  }\n}\n\nexport { ExerciseFilter, ExerciseModel, ExerciseResponse, ExerciseRatingPatchRequest };","/**\n * QuoteModel\n * Represents a quote model.\n *\n * @class\n * @param {Object} response - The API response object.\n * @param {string} response.quote - The quote text.\n * @param {string} response.author - The author of the quote.\n * @property {string} quote - The quote text.\n * @property {string} author - The author of the quote.\n */\nclass QuoteModel {\n  constructor(response) {\n    this.quote = response.quote;\n    this.author = response.author;\n  }\n}\n\nexport default QuoteModel;","import axios from 'axios';\nimport { FilterRequest, FilterResponse } from './models/filter-models.js';\nimport { ExerciseFilter, ExerciseModel, ExerciseResponse } from './models/exercise-models.js';\nimport QuoteModel from './models/quote-model.js';\n\nconst API_URL = 'https://your-energy.b.goit.study/api';\n\n/**\n * YourEnergyAPI class\n * This class is used to interact with the Your Energy API.\n */\nclass YourEnergyAPI {\n  constructor() {\n    this._api = axios.create({\n      baseURL: API_URL,\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    });\n  }\n\n  /**\n   * Fetches filters from the API.\n   * @param {FilterRequest} filterRequest\n   * @returns {Promise<FilterResponse>}\n   */\n  async fetchFilters(filterRequest) {\n    try {\n      const response = await this._api.get('/filters', {\n        params: filterRequest,\n      });\n      return new FilterResponse(response.data);\n    } catch (error) {\n      console.error('Error fetching filters:', error);\n      throw error;\n    }\n  }\n\n  /**\n   * Fetches exercises by filter from the API.\n   * @param {ExerciseFilter} exerciseFilter\n   * @returns {Promise<ExerciseResponse>}\n   */\n  async fetchExercisesByFilter(exerciseFilter) {\n    try {\n      const response = await this._api.get('/exercises', {\n        params: exerciseFilter,\n      });\n      return new ExerciseResponse(response.data);\n    } catch (error) {\n      console.error('Error fetching exercises by filter:', error);\n      throw error;\n    }\n  }\n\n  /**\n   * Fetches exercises by ID from the API.\n   * @param {string} id\n   * @returns {Promise<ExerciseModel>}\n   */\n  async fetchExercisesById(id) {\n    try {\n      const response = await this._api.get(`/exercises/${id}`);\n      return new ExerciseModel(response.data);\n    } catch (error) {\n      console.error('Error fetching exercises by ID:', error);\n      throw error;\n    }\n  }\n\n  /**\n   * Updates exercise rating by ID.\n   * @param {string} id\n   * @param {ExerciseRatingPatchRequest} request\n   * @returns {Promise<ExerciseModel>}\n   */\n  async patchExerciseRating(id, request) {\n    try {\n      const response = await this._api.patch(`/exercises/${id}/rating`, request);\n      return new ExerciseModel(response.data);\n    } catch (error) {\n      console.error('Error updating exercise rating:', error);\n      throw error;\n    }\n  }\n\n  /**\n   * Fetches the quote of the day from the API.\n   * @returns {Promise<QuoteModel>}\n   */\n  async fetchQuoteOfTheDay() {\n    try {\n      const response = await this._api.get('/quote');\n      return new QuoteModel(response.data);\n    } catch (error) {\n      console.error('Error fetching quote of the day:', error);\n      throw error;\n    }\n  }\n\n  /**\n   * Posts a subscription to the API.\n   * @param email\n   * @returns {Promise<string>} success message\n   */\n  async postSubscription(email) {\n    try {\n      const response = await this._api.post('/subscription', { email });\n      return response.data.message;\n    } catch (error) {\n      console.error('Error posting subscription:', error);\n      throw error;\n    }\n  }\n}\n\nconst yourEnergyAPI = new YourEnergyAPI();\nexport default yourEnergyAPI;","import yourEnergyAPI from './your-energy-api.js';\n\n(() => {\n  const ROLE = 'quote-of-the-day-container';\n  const storageKey = 'quoteOfTheDay';\n\n  class Quote {\n    #date;\n    /**\n     * @param {Date} date\n     */\n    set date(date) {\n      this.#date = this.#formatDate(date);\n    }\n\n    get date() {\n      return this.#date;\n    }\n\n    /**\n     * @param {String} text\n     * @param {String} author\n     * @param {Date} date\n     */\n    constructor({ text, author, date = null }) {\n      this.text = text;\n      this.author = author;\n      this.date = date || new Date();\n    }\n\n    isFresh() {\n      return this.#date === this.#formatDate(new Date());\n    }\n\n    #formatDate(date) {\n      return date.toISOString().split('T')[0];\n    }\n\n    toJSON() {\n      return {\n        text: this.text,\n        author: this.author,\n        date: this.#date,\n      };\n    }\n  }\n\n  class QuoteProvider {\n    static #load() {\n      const quoteData = JSON.parse(localStorage.getItem(storageKey));\n      if(quoteData) {\n        quoteData.date = new Date(quoteData?.date);\n      }\n      return quoteData ? new Quote(quoteData) : null;\n    }\n\n    static #save(quote) {\n      localStorage.setItem(storageKey, JSON.stringify(quote));\n    }\n\n    static async getQuote() {\n      const storedQuote = this.#load();\n      if (storedQuote?.isFresh()) {\n        return storedQuote;\n      }\n\n      const quote = await yourEnergyAPI.fetchQuoteOfTheDay();\n      const newQuote = new Quote({\n        text: quote.quote,\n        author: quote.author,\n      });\n      this.#save(newQuote);\n\n      return newQuote;\n    }\n  }\n\n  async function renderQuote() {\n    const quoteContainer = document.querySelector(`[data-role=\"${ROLE}\"]`);\n    if (quoteContainer === null) {\n      throw new Error(`Failed to render quote: element with data-role \"${ROLE}\" not found.`);\n    }\n    try {\n      const quote = await QuoteProvider.getQuote();\n      quoteContainer.innerHTML = `\n        <p class=\"quote-text\">${quote.text}</p>\n        <p class=\"quote-author\">${quote.author}</p>\n      `;\n    } catch (e) {\n      console.error('Error fetching quote:', e);\n    }\n  }\n\n  document.addEventListener('DOMContentLoaded', renderQuote);\n})();\n","function capitalizeFirstLetter(string) {\n    return string.charAt(0).toUpperCase() + string.slice(1);\n}\n\nexport { capitalizeFirstLetter };","import yourEnergyApi from './your-energy-api.js';\nimport { FilterRequest } from './models/filter-models.js';\nimport { capitalizeFirstLetter } from './helpers.js';\n\nclass ExerciseFilterElement {\n  constructor() {\n    this._element = document.createElement('li');\n    this._element.classList.add('exercises-filters__item');\n    this._image = document.createElement('img');\n    this._image.classList.add('exercises-filters__image');\n    this._image.setAttribute('loading', 'lazy');\n    this._overlay = document.createElement('div');\n    this._overlay.classList.add('exercises-filters__overlay');\n    this._overlayTitle = document.createElement('h5');\n    this._overlayText = document.createElement('p');\n    this._overlayText.classList.add('exercises-filters__overlay-text');\n  }\n\n  setImage(src) {\n    this._image.src = src;\n  }\n\n  setTitle(title) {\n    this._overlayTitle.textContent = capitalizeFirstLetter(title);\n  }\n\n  setText(text) {\n    this._overlayText.textContent = capitalizeFirstLetter(text);\n  }\n\n  setFilterName(name, filter) {\n    this._element.dataset.name = name;\n    this._element.dataset.filter = filter;\n  }\n\n  setImageAlt(alt) {\n    this._image.alt = alt;\n  }\n\n  build() {\n    this._overlay.append(this._overlayTitle, this._overlayText);\n    this._element.append(this._image, this._overlay);\n    return this._element;\n  }\n}\n\nclass ExercisesFilterRenderer {\n  constructor() {\n    this._exercisesFilterParent = document.getElementById('exercises-filters');\n    this._exercisesParent = document.getElementById('exercises-list');\n    if (!this._exercisesFilterParent) {\n      throw new Error('Exercises filter parent element not found');\n    }\n    this._breadcrumbs = document.querySelector('.breadcrumbs');\n\n    this._page = 1;\n    this._limit = 12;\n    this._pages = 1;\n    this._elements = [];\n  }\n\n  async init() {\n    this._setPageLimit();\n    await this._fetchFilters();\n    this._renderFilters();\n    this._addEventListeners();\n  }\n\n  _setPageLimit() {\n    this._pages = 1;\n    // if mobile\n    if (window.innerWidth <= 768) {\n      this._limit = 9;\n    } else {\n      this._limit = 12;\n    }\n  }\n\n  async _fetchFilters() {\n    const filterButton = this._exercisesFilterParent.querySelector('.exercises-filters__selected');\n    if (!filterButton) {\n      throw new Error('Filter button not found');\n    }\n    const filterName = filterButton.dataset.name;\n    const filterRequest = new FilterRequest(filterName, this._page, this._limit);\n    try {\n      const response = await yourEnergyApi.fetchFilters(filterRequest);\n      const items = response.getFilters();\n      if (items.length > 0) {\n        this._elements = items.map((item) => {\n          const filterElement = new ExerciseFilterElement();\n          filterElement.setImage(item.imgURL);\n          filterElement.setTitle(item.name);\n          filterElement.setText(item.filter);\n          filterElement.setFilterName(item.name, item.filter);\n          filterElement.setImageAlt(item.name);\n          return filterElement.build();\n        });\n      }\n      this._pages = response.totalPages;\n    } catch (error) {\n      console.error('Error fetching filters:', error);\n    }\n  }\n\n  _renderFilters() {\n    this._exercisesParent.innerHTML = '';\n    this._exercisesParent.append(...this._elements);\n    // todo: add pagination\n  }\n\n  _onCardClick(event) {\n    // todo\n  }\n\n  async _onFilterClick(event) {\n    event.preventDefault();\n    this._setPageLimit();\n    // remove active class from all filters\n    const filters = this._exercisesFilterParent.querySelectorAll('.exercises-filters__selected');\n    filters.forEach((filter) => {\n      filter.classList.remove('exercises-filters__selected');\n    });\n    // add active class to the clicked filter\n    event.target.classList.add('exercises-filters__selected');\n    await this._fetchFilters();\n    this._renderFilters();\n  }\n\n  _addEventListeners() {\n    this._exercisesFilterParent.addEventListener('click', this._onFilterClick.bind(this));\n  }\n}\n\nconst page = new ExercisesFilterRenderer();\npage.init();","import yourEnergyAPI from './your-energy-api.js';\nimport { FilterRequest } from './models/filter-models.js';\nimport { ExerciseFilter, ExerciseRatingPatchRequest } from './models/exercise-models.js';\n\n// example Filters\nconst filterRequest = new FilterRequest('Body parts', 1, 5);\nyourEnergyAPI.fetchFilters(filterRequest)\n  .then(response => {\n    console.log('Response:', response);\n    console.log('Filters:', response.getFilters());\n  })\n  .catch(error => {\n    console.error('Error:', error);\n  });\n\n// example Exercises by filter\nconst exerciseFilter = new ExerciseFilter('back', 'lats', 'barbell', 'pull', 1, 5);\nyourEnergyAPI.fetchExercisesByFilter(exerciseFilter)\n  .then(response => {\n    console.log('Response:', response);\n    console.log('Exercises:', response.getExercises());\n  })\n  .catch(error => {\n    console.error('Error:', error);\n  });\n\n// example Exercises by ID\nconst exerciseId = '64f389465ae26083f39b1ab2';\nyourEnergyAPI.fetchExercisesById(exerciseId)\n  .then(response => {\n    console.log('Response:', response);\n  })\n  .catch(error => {\n    console.error('Error:', error);\n  });\n\n// example Exercise patch rating\nconst exerciseRatingRequest = new ExerciseRatingPatchRequest(\n  3,\n  `test${Date.now()}@gmail.com`, // it requires email to be uniq\n  'Great exercise! Very effective.');\nyourEnergyAPI.patchExerciseRating(exerciseId, exerciseRatingRequest)\n  .then(response => {\n    console.log('Response:', response);\n  })\n  .catch(error => {\n    console.error('Error:', error);\n  });\n\n// example Subscription\nconst email = `sub_test${Date.now()}@gmail.com`; // it requires email to be uniq\nyourEnergyAPI.postSubscription(email)\n  .then(response => {\n    console.log('Subscription Response:', response);\n  })\n  .catch(\n    error => {\n      console.error('Error:', error);\n    });\n"],"names":["BaseApiResponse","response","FilterModel","filter","name","imgURL","FilterRequest","page","limit","FilterResponse","ExerciseFilter","bodypart","muscles","equipment","keyword","ExerciseModel","result","ExerciseResponse","exercise","ExerciseRatingPatchRequest","rate","email","review","QuoteModel","API_URL","YourEnergyAPI","axios","filterRequest","error","exerciseFilter","id","request","yourEnergyAPI","ROLE","storageKey","Quote","text","author","date","__privateAdd","_Quote_instances","_date","__privateSet","__privateMethod","formatDate_fn","__privateGet","QuoteProvider","storedQuote","_QuoteProvider_static","load_fn","quote","newQuote","save_fn","quoteData","renderQuote","quoteContainer","e","capitalizeFirstLetter","string","ExerciseFilterElement","src","title","alt","ExercisesFilterRenderer","filterButton","filterName","yourEnergyApi","items","item","filterElement","event","exerciseId","exerciseRatingRequest"],"mappings":"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"}