import{a as p}from"./assets/vendor-DYiOAYln.js";(function(){const e=document.createElement("link").relList;if(e&&e.supports&&e.supports("modulepreload"))return;for(const r of document.querySelectorAll('link[rel="modulepreload"]'))i(r);new MutationObserver(r=>{for(const o of r)if(o.type==="childList")for(const c of o.addedNodes)c.tagName==="LINK"&&c.rel==="modulepreload"&&i(c)}).observe(document,{childList:!0,subtree:!0});function s(r){const o={};return r.integrity&&(o.integrity=r.integrity),r.referrerPolicy&&(o.referrerPolicy=r.referrerPolicy),r.crossOrigin==="use-credentials"?o.credentials="include":r.crossOrigin==="anonymous"?o.credentials="omit":o.credentials="same-origin",o}function i(r){if(r.ep)return;r.ep=!0;const o=s(r);fetch(r.href,o)}})();class u{constructor(e){this.page=e.page,this.perPage=e.perPage,this.totalPages=e.totalPages,this.results=e.results}}class g{constructor(e,s,i){this.filter=e,this.name=s,this.imgURL=i}}class d{constructor(e,s,i){this.filter=e,this.page=s,this.limit=i}}class f extends u{constructor(e){super(e)}getFilters(){return this.results.map(e=>new g(e.filter,e.name,e.imgURL))}}class _{constructor(e,s,i,r,o=1,c=10){this.bodypart=e,this.muscles=s,this.equipment=i,this.keyword=r,this.page=o,this.limit=c}}class l{constructor(e){this.id=e._id,this.bodyPart=e.bodyPart,this.equipment=e.equipment,this.gifUrl=e.gifUrl,this.name=e.name,this.target=e.target,this.description=e.description,this.rating=e.rating,this.burnedCalories=e.burnedCalories,this.time=e.time,this.popularity=e.popularity}}class y extends u{constructor(e){super(e)}getExercises(){return this.results.map(e=>new l(e))}}class x{constructor(e,s,i){this.rate=e,this.email=s,this.review=i}}class E{constructor(e){this.quote=e.quote,this.author=e.author}}const w="https://your-energy.b.goit.study/api";class F{constructor(){this._api=p.create({baseURL:w,headers:{"Content-Type":"application/json"}})}async fetchFilters(e){try{const s=await this._api.get("/filters",{params:e});return new f(s.data)}catch(s){throw console.error("Error fetching filters:",s),s}}async fetchExercisesByFilter(e){try{const s=await this._api.get("/exercises",{params:e});return new y(s.data)}catch(s){throw console.error("Error fetching exercises by filter:",s),s}}async fetchExercisesById(e){try{const s=await this._api.get(`/exercises/${e}`);return new l(s.data)}catch(s){throw console.error("Error fetching exercises by ID:",s),s}}async patchExerciseRating(e,s){try{const i=await this._api.patch(`/exercises/${e}/rating`,s);return new l(i.data)}catch(i){throw console.error("Error updating exercise rating:",i),i}}async fetchQuoteOfTheDay(){try{const e=await this._api.get("/quote");return new E(e.data)}catch(e){throw console.error("Error fetching quote of the day:",e),e}}async postSubscription(e){try{return(await this._api.post("/subscription",{email:e})).data.message}catch(s){throw console.error("Error posting subscription:",s),s}}}const n=new F;function h(t){return t.charAt(0).toUpperCase()+t.slice(1)}class b{constructor(){this._element=document.createElement("li"),this._element.classList.add("exercises-filters__item"),this._image=document.createElement("img"),this._image.classList.add("exercises-filters__image"),this._image.setAttribute("loading","lazy"),this._overlay=document.createElement("div"),this._overlay.classList.add("exercises-filters__overlay"),this._overlayTitle=document.createElement("h5"),this._overlayText=document.createElement("p"),this._overlayText.classList.add("exercises-filters__overlay-text")}setImage(e){this._image.src=e}setTitle(e){this._overlayTitle.textContent=h(e)}setText(e){this._overlayText.textContent=h(e)}setFilterName(e,s){this._element.dataset.name=e,this._element.dataset.filter=s}setImageAlt(e){this._image.alt=e}build(){return this._overlay.append(this._overlayTitle,this._overlayText),this._element.append(this._image,this._overlay),this._element}}class P{constructor(){if(this._exercisesFilterParent=document.getElementById("exercises-filters"),this._exercisesParent=document.getElementById("exercises-list"),!this._exercisesFilterParent)throw new Error("Exercises filter parent element not found");this._breadcrumbs=document.querySelector(".breadcrumbs"),this._page=1,this._limit=12,this._pages=1,this._elements=[]}async init(){this._setPageLimit(),await this._fetchFilters(),this._renderFilters(),this._addEventListeners()}_setPageLimit(){this._pages=1,window.innerWidth<=768?this._limit=9:this._limit=12}async _fetchFilters(){const e=this._exercisesFilterParent.querySelector(".exercises-filters__selected");if(!e)throw new Error("Filter button not found");const s=e.dataset.name,i=new d(s,this._page,this._limit);try{const r=await n.fetchFilters(i),o=r.getFilters();o.length>0&&(this._elements=o.map(c=>{const a=new b;return a.setImage(c.imgURL),a.setTitle(c.name),a.setText(c.filter),a.setFilterName(c.name,c.filter),a.setImageAlt(c.name),a.build()})),this._pages=r.totalPages}catch(r){console.error("Error fetching filters:",r)}}_renderFilters(){this._exercisesParent.innerHTML="",this._exercisesParent.append(...this._elements)}_onCardClick(e){}async _onFilterClick(e){e.preventDefault(),this._setPageLimit(),this._exercisesFilterParent.querySelectorAll(".exercises-filters__selected").forEach(i=>{i.classList.remove("exercises-filters__selected")}),e.target.classList.add("exercises-filters__selected"),await this._fetchFilters(),this._renderFilters()}_addEventListeners(){this._exercisesFilterParent.addEventListener("click",this._onFilterClick.bind(this))}}const L=new P;L.init();const v=new d("Body parts",1,5);n.fetchFilters(v).then(t=>{console.log("Response:",t),console.log("Filters:",t.getFilters())}).catch(t=>{console.error("Error:",t)});const R=new _("back","lats","barbell","pull",1,5);n.fetchExercisesByFilter(R).then(t=>{console.log("Response:",t),console.log("Exercises:",t.getExercises())}).catch(t=>{console.error("Error:",t)});const m="64f389465ae26083f39b1ab2";n.fetchExercisesById(m).then(t=>{console.log("Response:",t)}).catch(t=>{console.error("Error:",t)});const q=new x(3,`test${Date.now()}@gmail.com`,"Great exercise! Very effective.");n.patchExerciseRating(m,q).then(t=>{console.log("Response:",t)}).catch(t=>{console.error("Error:",t)});n.fetchQuoteOfTheDay().then(t=>{console.log("Quote of the Day:",t),console.log("Quote:",t.quote),console.log("Author:",t.author)}).catch(t=>{console.error("Error fetching quote:",t)});const T=`sub_test${Date.now()}@gmail.com`;n.postSubscription(T).then(t=>{console.log("Subscription Response:",t)}).catch(t=>{console.error("Error:",t)});
//# sourceMappingURL=index.js.map
